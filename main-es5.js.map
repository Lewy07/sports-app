{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login-info.ts","webpack:///src/app/auth/signup-info.ts","webpack:///src/app/auth/token-storage.service.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/create/create.component.ts","webpack:///src/app/create/create.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/information/information.component.ts","webpack:///src/app/information/information.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/rules/rules.component.ts","webpack:///src/app/rules/rules.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","tokenStorage","show","size","test","widthRouting","getToken","roles","getAuthorities","every","role","authority","signOut","window","location","reload","console","log","setTimeout","showFunc","closeFunc","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","TOKEN_HEADER_KEY","AuthInterceptor","token","next","authReq","clone","headers","set","handle","httpInterceptorProviders","provide","useClass","multi","httpOptions","AuthService","http","loginUrl","signupUrl","credentials","post","info","providedIn","AuthLoginInfo","username","password","SignUpInfo","name","email","TOKEN_KEY","USERNAME_KEY","AUTHORITIES_KEY","TokenStorageService","sessionStorage","clear","removeItem","setItem","getItem","authorities","JSON","stringify","parse","forEach","push","ContactComponent","CreateComponent","httpClient","dataService","form","url","getUsername","event","selectedFile","target","files","reader","FileReader","readAsDataURL","onload","result","uploadImageData","FormData","append","title","description","firstTag","secondTag","create","subscribe","response","status","message","HomeComponent","p","pipe","retreiveImages","getAll","data","element","picByte","author","replace","tags","date","transform","images","error","dateFromSearch","dateToSearch","tagToSearch","findImages","titleSearch","descriptionSearch","undefined","search","InformationComponent","LoginComponent","authService","router","isLoggedIn","isLoginFailed","errorMessage","navigate","loginInfo","attemptAuth","saveToken","accessToken","saveUsername","saveAuthorities","reloadPage","RegisterComponent","isSignedUp","isSignUpFailed","signupInfo","signUp","RulesComponent","createUrl","baseUrl","DataService","get","from","to","observe","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { RulesComponent } from './rules/rules.component';\r\nimport { InformationComponent } from './information/information.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent\r\n    },\r\n    {\r\n        path: 'create',\r\n        component: CreateComponent\r\n    },\r\n    {\r\n        path: 'auth/login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: RegisterComponent\r\n    },\r\n    {\r\n        path: 'rules',\r\n        component: RulesComponent\r\n    },\r\n    {\r\n        path: 'contact',\r\n        component: ContactComponent\r\n    },\r\n    {\r\n        path: 'information',\r\n        component: InformationComponent\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: 'home',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './auth/token-storage.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  public show: boolean = true;\r\n  roles: string[];\r\n  authority: string;\r\n  info: any;\r\n  size = '0%';\r\n  test = 'visible';\r\n  widthRouting = '100%';\r\n\r\n  constructor(private tokenStorage: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.roles = this.tokenStorage.getAuthorities();\r\n      this.roles.every(role => {\r\n        if (role === 'ROLE_ADMIN') {\r\n          this.authority = 'admin';\r\n          return false;\r\n        } else if (role === 'ROLE_PM') {\r\n          this.authority = 'pm';\r\n          return false;\r\n        }\r\n        this.authority = 'user';\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.tokenStorage.signOut();\r\n    window.location.reload();\r\n  }\r\n\r\n  showFunc(): void {\r\n    this.show = !this.show;\r\n    console.log(this.show);\r\n    this.size = '100%';\r\n    this.test = 'hidden';\r\n  }\r\n\r\n  closeFunc(): void {\r\n    this.size = '0%';\r\n    setTimeout(() => {  this.test = 'visible'; }, 500);\r\n  }\r\n}\r\n\r\n","<header>\r\n  <a class=\"logo\" href=\"/\"><img src=\"assets/dodge-sport-2.svg\" alt=\"logo\"></a>\r\n\r\n  <nav>\r\n    <ul class=\"nav__links\">\r\n      <li><a href=\"#\">Główna</a></li>\r\n      <li><a routerLink=\"information\">Informacje</a></li>\r\n    </ul>\r\n  </nav>\r\n  <div *ngIf=\"authority\" >\r\n    <a routerLink=\"create\" class=\"cta\">Dodaj</a>\r\n    <a>&nbsp;</a>\r\n    <a>&nbsp;</a>\r\n    <a class=\"cta\" (click)=\"logout()\">Wyloguj</a>\r\n  </div>\r\n  <a *ngIf=\"!authority\" class=\"cta\" routerLink=\"auth/login\">Zaloguj</a>\r\n  <button class=\"menu cta\" (click)=\"showFunc()\">Menu</button>\r\n</header>\r\n<div class=\"overlay\" [ngStyle]=\"{'width': size}\">\r\n  <button class=\"close\" (click)=\"closeFunc()\">&times;</button>\r\n  <div class=\"overlay__content\">\r\n    <a href=\"#\">Główna</a>\r\n    <a routerLink=\"information\">Informacje</a>\r\n    <a *ngIf=\"authority\" class=\"cta\" (click)=\"logout()\">Wyloguj</a>\r\n    <a *ngIf=\"!authority\" class=\"cta\" routerLink=\"auth/login\">Zaloguj</a>\r\n  </div>\r\n</div>\r\n\r\n<div [ngStyle]=\"{'visibility': test,'width': widthRouting}\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<div class=\"footer-basic\">\r\n  <footer>\r\n      <ul class=\"list-inline\">\r\n          <li class=\"list-inline-item\"><a href=\"#\">Strona główna</a></li>\r\n          <li class=\"list-inline-item\"><a routerLink=\"information\">Informacje</a></li>\r\n      </ul>\r\n      <p class=\"copyright\">Company Bartłomiej Lewandowski © 2021</p>\r\n  </footer>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { httpInterceptorProviders } from './auth/auth-interceptor';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { RulesComponent } from './rules/rules.component';\r\nimport { IvyCarouselModule } from 'angular-responsive-carousel';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InformationComponent } from './information/information.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    CreateComponent,\r\n    ContactComponent,\r\n    RulesComponent,\r\n    InformationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    IvyCarouselModule,\r\n    NgbModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [httpInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private token: TokenStorageService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        let authReq = req;\r\n        const token = this.token.getToken();\r\n        if (token != null) {\r\n            authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n        }\r\n        return next.handle(authReq);\r\n    }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { JwtResponse } from './jwt-response';\r\nimport { AuthLoginInfo } from './login-info';\r\nimport { SignUpInfo } from './signup-info';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private loginUrl = 'https://floating-cove-62554.herokuapp.com/api/auth/signin';\r\n  private signupUrl = 'https://floating-cove-62554.herokuapp.com/api/auth/signup';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\r\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\r\n  }\r\n\r\n  signUp(info: SignUpInfo): Observable<string> {\r\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\r\n  }\r\n}\r\n","export class AuthLoginInfo {\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}\r\n","export class SignUpInfo {\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    role: string[];\r\n    password: string;\r\n\r\n    constructor(name: string, username: string, email: string, password: string) {\r\n        this.name = name;\r\n        this.username = username;\r\n        this.email = email;\r\n        this.password = password;\r\n        this.role = ['user'];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\nconst USERNAME_KEY = 'AuthUsername';\r\nconst AUTHORITIES_KEY = 'AuthAuthorities';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  private roles: Array<string> = [];\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUsername(username: string) {\r\n    window.sessionStorage.removeItem(USERNAME_KEY);\r\n    window.sessionStorage.setItem(USERNAME_KEY, username);\r\n  }\r\n\r\n  public getUsername(): string {\r\n    return sessionStorage.getItem(USERNAME_KEY);\r\n  }\r\n\r\n  public saveAuthorities(authorities: string[]) {\r\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\r\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\r\n  }\r\n\r\n  public getAuthorities(): string[] {\r\n    this.roles = [];\r\n\r\n    if (sessionStorage.getItem(TOKEN_KEY)) {\r\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\r\n        this.roles.push(authority.authority);\r\n      });\r\n    }\r\n\r\n    return this.roles;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"contact\">\n    <div class=\"leftside\">\n        <h1>O stronie</h1>\n        <img src=\"assets/face.png\">\n        <img src=\"assets/insta2.png\">\n        <img src=\"assets/twitter.png\">\n    </div>\n    <div class=\"rightside\">\n        <p>Aplikacja internetowa została utworzona w celach projektowych związanych ze studiami. Autorem\n            aplikacji jest Bartlomiej Lewandowski. Umożliwia ona dodawania postów wraz ze zdjęciamia przez zalogowanych\n            użytkowników oraz przeglądanie ich oraz wyszukiwanie.\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\n\nexport class CreateComponent implements OnInit {\n  info: any;\n  selectedFile: File;\n  message: string;\n  form: any = {};\n  imageSrc: string;\n  url = '';\n\n  constructor(private token: TokenStorageService, private httpClient: HttpClient, private dataService: DataService) { }\n\n  ngOnInit() {\n    this.info = {\n      token: this.token.getToken(),\n      username: this.token.getUsername(),\n      authorities: this.token.getAuthorities()\n    };\n  }\n\n  public onFileChanged(event): void {\n    //Select File\n    this.selectedFile = event.target.files[0];\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.url = event.target.result as string;\n      }\n    }\n  }\n\n  onSubmit() {\n    console.log(this.selectedFile);\n\n    //FormData API provides methods and properties to allow us easily prepare form data to be sent with POST HTTP requests.\n    const uploadImageData = new FormData();\n    uploadImageData.append('imageFile', this.selectedFile, this.selectedFile.name);\n    uploadImageData.append('title', JSON.stringify(this.form.title));\n    uploadImageData.append('author', JSON.stringify(this.info.username));\n    uploadImageData.append('description', JSON.stringify(this.form.description));\n    uploadImageData.append('tags', JSON.stringify(this.form.firstTag + ', ' + this.form.secondTag));\n\n    this.dataService.create(uploadImageData).subscribe((response) => {\n        if (response.status === 200) {\n          this.message = 'Pomyślnie dodano element';\n        } else {\n          this.message = 'Błąd podczas dodawania';\n        }\n      }\n      );\n  }\n}\n","<div *ngIf=\"info.token\" id=\"addpost\">\n    <div class=\"container row\">\n        <div class=\"col-md-12\">\n            <h1>Dodaj post</h1>\n        </div>\n    </div>\n    <hr />\n    <form id=\"addForm\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n        <div class=\"form-group\">\n            <label for=\"title\">Tytuł:</label>\n            <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"form.title\" #title=\"ngModel\" required maxlength=\"49\"/>\n            <div *ngIf=\"f.submitted && title.invalid\">\n                <div *ngIf=\"title.errors.required\">\n                    <p>Tytuł jest wymagany</p>\n                </div>\n            </div>\n        </div>\n        <br>\n        <div class=\"container row\">\n            <div class=\"col-md-6\" id=\"file\">\n                <img class=\"preview\" [src]=\"url\" height=\"150vh\"> <br />\n                <input class=\"filePick\" type=\"file\" (change)=\"onFileChanged($event)\">\n            </div>\n        </div>\n        <br>\n        <div class=\"form-group\">\n            <label for=\"description\">Opis:</label>\n            <input type=\"description\" class=\"form-control\" name=\"description\" [(ngModel)]=\"form.description\"\n                #description=\"ngModel\" required  maxlength=\"299\"/>\n            <div *ngIf=\"f.submitted && description.invalid\">\n                <div *ngIf=\"description.errors.required\">\n                    <p>Opis jest wymagany</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"firstTag\">Rodzaj:</label>\n            <select type=\"firstTag\" class=\"form-control\" name=\"firstTag\" [(ngModel)]=\"form.firstTag\" #firstTag=\"ngModel\"\n                required>\n                <option value=\"Ciekawostka\">Ciekawostka</option>\n                <option value=\"Informacja\">Informacja</option>\n                <option value=\"Mem\">Mem</option>\n            </select>\n            <div *ngIf=\"f.submitted && firstTag.invalid\">\n                <div *ngIf=\"firstTag.errors.required\">\n                    <p>Tag jest wymagany</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"secondTag\">Kogo dotyczy:</label>\n            <select type=\"secondTag\" class=\"form-control\" name=\"secondTag\" [(ngModel)]=\"form.secondTag\"\n                #secondTag=\"ngModel\" required>\n                <option value=\"Piłkarz\">Piłkarz</option>\n                <option value=\"Trener\">Trener</option>\n                <option value=\"Drużyna\">Drużyna</option>\n            </select>\n            <div *ngIf=\"f.submitted && secondTag.invalid\">\n                <div *ngIf=\"secondTag.errors.required\">\n                    <p>Tag jest wymagany</p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"form-group\">\n            <button class=\"btn btn-primary\">Dodaj</button>\n            <hr />\n            <div *ngIf=message id=\"addInfo\" class=\"alert alert-info\">\n                <p>{{message}}</p>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpEventType } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../auth/token-storage.service';\r\nimport { Data } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  info: any;\r\n  images: any;\r\n  titleSearch: String;\r\n  descriptionSearch: String;\r\n  dateFromSearch: String;\r\n  dateToSearch: String;\r\n  tagToSearch: String;\r\n  datecontrol: '';\r\n  p: number = 1;\r\n  pipe = new DatePipe('en-US'); // Use your own locale\r\n  form: any;\r\n\r\n  constructor(private token: TokenStorageService, private httpClient: HttpClient, private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.info = {\r\n      token: this.token.getToken(),\r\n      username: this.token.getUsername(),\r\n      authorities: this.token.getAuthorities()\r\n    };\r\n    this.retreiveImages();\r\n  }\r\n\r\n  retreiveImages(): void {\r\n    this.dataService.getAll().subscribe(\r\n      data => {\r\n        data.forEach(element => {\r\n          element.picByte = 'data:image/jpeg;base64,' + element.picByte;\r\n          element.author = element.author.replace(/\"/g, \" \");\r\n          element.description = element.description.replace(/\"/g, \" \");\r\n          element.tags = element.tags.replace(/\"/g, \" \");\r\n          element.title = element.title.replace(/\"/g, \" \");\r\n          element.date = this.pipe.transform(element.date, 'short');\r\n        });\r\n        this.images = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  refresh() {\r\n    this.retreiveImages();\r\n  }\r\n\r\n  search(): void {\r\n    if (this.dateFromSearch) {\r\n      this.dateFromSearch = this.dateFromSearch.replace(/T/g, \" \");\r\n      console.log(this.dateFromSearch);\r\n    }\r\n    if (this.dateToSearch) {\r\n      console.log(\"Date to\");\r\n      this.dateToSearch = this.dateToSearch.replace(/T/g, \" \");\r\n      console.log(this.dateToSearch);\r\n      console.log(\"Date to\");\r\n    }\r\n    console.log(this.tagToSearch);\r\n\r\n    this.dataService.findImages(this.titleSearch, this.descriptionSearch, this.tagToSearch, this.dateFromSearch, this.dateToSearch).subscribe(\r\n      data => {\r\n        data.forEach(element => {\r\n          element.picByte = 'data:image/jpeg;base64,' + element.picByte;\r\n          element.author = element.author.replace(/\"/g, \" \");\r\n          element.description = element.description.replace(/\"/g, \" \");\r\n          element.tags = element.tags.replace(/\"/g, \" \");\r\n          element.title = element.title.replace(/\"/g, \" \");\r\n          element.date = this.pipe.transform(element.date, 'short');\r\n        });\r\n        this.images = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n    this.titleSearch = undefined;\r\n    this.descriptionSearch = undefined;\r\n    this.tagToSearch = undefined;\r\n    this.dateFromSearch = undefined;\r\n    this.dateToSearch = undefined;\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.token.signOut();\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div>\r\n  <div >\r\n    <div id=\"searchPanel\" class=\"d-flex justify-content-center\">\r\n      <div>\r\n        <label for=\"title\">Wprowadź tytuł:</label>\r\n        <input name=\"title\" type=\"text\" class=\"form-control\" placeholder=\"Tytuł\" [(ngModel)]=\"titleSearch\" />\r\n        <br>\r\n        <label for=\"description\">Wprowadź opis:</label>\r\n        <input name=\"description\" type=\"text\" class=\"form-control\" placeholder=\"Opis\" [(ngModel)]=\"descriptionSearch\" />\r\n      </div>\r\n\r\n      <div class=\"date\">\r\n        <label for=\"tags\">Data dodania od:</label>\r\n        <br>\r\n        <input type=\"datetime-local\" [(ngModel)]=\"dateFromSearch\">\r\n        <br>\r\n        <label id=\"secondLabel\" for=\"tags\">Data dodania do:</label>\r\n        <br>\r\n        <input type=\"datetime-local\" [(ngModel)]=\"dateToSearch\">\r\n      </div>\r\n      <div id=\"tag\" class=\"form-group\">\r\n        <label for=\"tags\">Typ:</label>\r\n        <select type=\"tags\" class=\"form-control\" name=\"tagToSearch\" [(ngModel)]=\"tagToSearch\">\r\n          <option value=\"Ciekawostka\">Ciekawostka</option>\r\n          <option value=\"Informacja\">Informacja</option>\r\n          <option value=\"Mem\">Mem</option>\r\n          <option value=\"Piłkarz\">Piłkarz</option>\r\n          <option value=\"Trener\">Trener</option>\r\n          <option value=\"Drużyna\">Drużyna</option>\r\n        </select>\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"search()\">\r\n            Szukaj\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    \r\n\r\n    <div id=\"listWithPhotos\" class=\"d-flex justify-content-center\">\r\n      <ul class=\"list-group\">\r\n        <li class=\"list-group-item\"\r\n          *ngFor=\"let image of images | paginate : { itemsPerPage: 5, currentPage: p }; let i = index\">\r\n          <h3>{{ image.title }}</h3>   \r\n          <a id=\"list\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <div class=\"d-flex w-400 justify-content-between\">\r\n              <small class=\"mb-1\">{{ image.tags }}</small>\r\n              <h5 class=\"text-muted\">{{ image.author }}</h5>\r\n              <small class=\"text-muted\">{{ image.date }}</small>\r\n            </div>\r\n            <img [src]=\"image.picByte\" width=\"700px\" class=\"img-fluid\">\r\n            <p class=\"description\" id=\"description\">{{ image.description }}</p>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div id=\"pagination\" class=\"d-flex justify-content-center\">\r\n      <pagination-controls previousLabel=\"Poprzednia\" nextLabel=\"Następna\" responsive=\"true\" (pageChange)=\"p = $event\">\r\n      </pagination-controls>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.css']\n})\nexport class InformationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ngb-carousel class=\"obraz\">\n    <ng-template ngbSlide>\n      <app-contact></app-contact>\n    </ng-template>\n    <ng-template ngbSlide>\n      <app-rules></app-rules>\n    </ng-template>\n  </ngb-carousel>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { TokenStorageService } from '../auth/token-storage.service';\r\nimport { AuthLoginInfo } from '../auth/login-info';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n  private loginInfo: AuthLoginInfo;\r\n\r\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, public router: Router) { }\r\n\r\n  go(){\r\n\t\tthis.router.navigate(['/']); // navigate to other page\r\n\t}\r\n\r\n  ngOnInit() {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getAuthorities();\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.form);\r\n\r\n    this.loginInfo = new AuthLoginInfo(\r\n      this.form.username,\r\n      this.form.password);\r\n\r\n    this.authService.attemptAuth(this.loginInfo).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUsername(data.username);\r\n        this.tokenStorage.saveAuthorities(data.authorities);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getAuthorities();\r\n        this.reloadPage();\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.errorMessage = error.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"isLoggedIn; else loggedOut\">\r\n    <button class=\"cta\" id=\"goHomeButton\" routerLink=\"\">Przejdź na stronę główną</button>\r\n</div>\r\n\r\n<ng-template #loggedOut class=\"loggedOutTemp\">\r\n  <div class=\"row col-sm-12\">\r\n    <form id=\"loginform\" class=\"login-form\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Nazwa użytkownika:</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\"\r\n          required />\r\n        <div *ngIf=\"f.submitted && username.invalid\">\r\n          <div *ngIf=\"username.errors.required\">\r\n            <p>Błędna nazwa użytkownika</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Hasło:</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\" />\r\n        <div *ngIf=\"f.submitted && password.invalid\">\r\n          <div *ngIf=\"password.errors.required\">\r\n            <p>Błędne hasło</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary\" id=\"logButton\">Zaloguj</button>\r\n        <br>\r\n        <br>\r\n        <p id=\"question\">  Nie masz konta? <a href=\"signup\">Zarejestruj się.</a></p>\r\n        <div *ngIf=\"f.submitted && isLoginFailed\" id=\"failedLoginAlert\" class=\"alert alert-danger\">\r\n          <p>Logowanie nieudane - blędny login lub hasło</p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { SignUpInfo } from '../auth/signup-info';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: any = {};\r\n  signupInfo: SignUpInfo;\r\n  isSignedUp = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onSubmit() {\r\n    console.log(this.form);\r\n\r\n    this.signupInfo = new SignUpInfo(\r\n      this.form.name,\r\n      this.form.username,\r\n      this.form.email,\r\n      this.form.password);\r\n\r\n    this.authService.signUp(this.signupInfo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSignedUp = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.errorMessage = error.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"isSignedUp; else signupForm\">\r\n  <button class=\"cta\" id=\"goHomeButton\" routerLink=\"/auth/login\">Zaloguj się</button>\r\n</div>\r\n\r\n<ng-template #signupForm>\r\n  <div class=\"row col-sm-12\" id=\"divRegistry\">\r\n    <form id=\"registryform\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Imię:</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"form.name\" #name=\"ngModel\" required />\r\n        <div *ngIf=\"f.submitted && name.invalid\">\r\n          <div *ngIf=\"name.errors.required\">\r\n            <p>Imię jest wymagane</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"username\" for=\"username\">Nazwa użytkownika:</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\"\r\n          required />\r\n        <div *ngIf=\"f.submitted && username.invalid\">\r\n          <div *ngIf=\"username.errors.required\">\r\n            <p>Nazwa użytkownika jest wymagana</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" #email=\"ngModel\" required email />\r\n        <div *ngIf=\"f.submitted && email.invalid\">\r\n          <div *ngIf=\"email.errors.required\">\r\n            <p>Email jest wymagany</p>\r\n          </div>\r\n          <div *ngIf=\"email.errors.email\">\r\n            <p>Błędny adres email</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Hasło:</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\"\r\n          required minlength=\"6\" />\r\n        <div *ngIf=\"f.submitted && password.invalid\">\r\n          <div *ngIf=\"password.errors.required\">\r\n            <p>Hasło jest wymagane</p>\r\n          </div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            <p>Hasło musi mieć więcej niż 6 znaków</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button id=\"registry\" class=\"btn btn-primary\">Zarejestruj</button>\r\n        <div *ngIf=\"f.submitted && isSignUpFailed\" id=\"failedRegistryAlert\" class=\"alert alert-warning\">\r\n          <p>Użytkownik o tym adresie email lub nazwie już istnieje.</p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rules',\n  templateUrl: './rules.component.html',\n  styleUrls: ['./rules.component.css']\n})\nexport class RulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"contact\">\n  <div id=\"leftside\">\n      <h1>Regulamin</h1>\n  </div>\n  <div class=\"rightside\">\n    <p>\n      Sport to strona z humorem. Podczas przesyłania memów lub korzystania z witryny w jakikolwiek sposób\n      należy\n      pamiętać,\n      że obraźliwe, lekceważące, wulgarne i seksualne treści oraz zachowania są zabronione.\n    </p>\n    <p>Zabrania się zamieszczania postów o charakterystyce:</p>\n    <ul>\n      <li>Aktów, pornografii oraz materiałów o jednoznacznie seksualnym charakterze.\n      </li>\n      <li>Przemocy, nękania i zastraszania.</li>\n      <li>Mowy nienawiści i obelg.</li>\n      <li>Naruszającej prawa autorskie.</li>\n      <li>Udostępniającej dane osobiste oraz poufne.</li>\n      <li>Dublującej aktualne materiały.</li>\n    </ul>\n  </div>\n</div>","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst createUrl = 'https://floating-cove-62554.herokuapp.com/image/upload'\nconst baseUrl = 'https://floating-cove-62554.herokuapp.com/image/getall'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<any> {\n    return this.http.get(baseUrl);\n  }\n\n  findImages(title, description, tags, from, to): Observable<any> {\n    return this.http.get(`${baseUrl}?title=${title}&description=${description}&tags=${tags}&from=${from}&to=${to}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(createUrl, data, { observe: 'response' });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}